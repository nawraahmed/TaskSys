@using TaskManagementSystem.ViewModels
@model ProjectsUsersVM

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit</h1>

<h4>Project Name:  @Model.Project.Name</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Project.ProjectId" />
            <div class="form-group">
                <label asp-for="Project.Name" class="control-label"></label>
                <input asp-for="Project.Name" class="form-control" />
                <span asp-validation-for="Project.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Project.Description" class="control-label"></label>
                <input asp-for="Project.Description" class="form-control" />
                <span asp-validation-for="Project.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Project.Deadline" class="control-label"></label>
                <input asp-for="Project.Deadline" class="form-control" />
                <span asp-validation-for="Project.Deadline" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Project.Budget" class="control-label"></label>
                <input asp-for="Project.Budget" class="form-control" />
                <span asp-validation-for="Project.Budget" class="text-danger"></span>
            </div>
             <div class="form-group">
                <label asp-for="Project.CreatedByUsername" class="control-label"></label>
                <select asp-for="Project.CreatedByUsername" class="form-control"
                        asp-items="@Model.Users.Select(m=> new SelectListItem {Text = m.Username})"></select>
            </div>

            

            <div class="form-group">
                <label asp-for="Project.Status" class="control-label"></label>
                <select asp-for="Project.Status" class="form-control">
                    <option value="Pending" style="color:orangered">Pending</option>
                    <option value="In Progress">In Progress</option>
                    <option value="Completed">Completed</option>
                    <option value="Overdue">Overdue</option>
                </select>
                <span asp-validation-for="Project.Status" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="control-label">Project Members:</label>
                
                @foreach (var user in Model.Users)
                {

                    //add this "flexCheckChecked" as a class, if the memebr is part of the prject, and remove the class of non-members
                    var isChecked = (Model.SelectedMembers != null && user.Username != null && Model.SelectedMembers.Contains(user.Username)) ? "flexCheckChecked" : "";


                    //add this "checked" as an attribute, if the memebr is part of the prject, and remove the class of non-members
                    var checkedAttribute = (Model.SelectedMembers != null && user.Username != null && Model.SelectedMembers.Contains(user.Username)) ? "checked" : "";


                    <div class="form-check">

                        <input class="form-check-input" for="flexCheckChecked" type="checkbox" id="@("user_" + user.Username) @isChecked" value="@user.Username" name="SelectedMembers" @checkedAttribute />
                        <label class="form-check-label" for="@("user_" + user.Username)">@user.Username</label>
                    </div>
                }

            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

