@model TaskManagementSystem.Models.Task

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<div>
    <h4>Task</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Deadline)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Deadline)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.AssignedToUsernameNavigation)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.AssignedToUsernameNavigation.Username)
        </dd>
        
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TaskDocumentNavigation)
        </dt>
        <dd class = "col-sm-10">
            @{
                if (Model.TaskDocumentNavigation != null)
                {
                    var doc = Model.TaskDocumentNavigation;

                    //check if the document is a picture, make it embeded 
                    if (doc.DocumentType == "image/jpeg" || doc.DocumentType == "image/png")
                    {
                        var base64 = Convert.ToBase64String(Model.TaskDocumentNavigation.BinaryData);
                        var imgSrc = String.Format("data:image;base64,{0}", base64);

                        <img src="@imgSrc" style="width:100%; height:100%" />
                    }
                    else
                    {
                        //if it's a file, make it downloadable
                        var base64 = Convert.ToBase64String(doc.BinaryData);
                        var dataUri = $"data:{doc.DocumentType};base64,{base64}";

                        <a href="@dataUri" download="@doc.DocumentName">Download</a>
                        
                    }
                    
                    
            }
                
            }

           
        </dd>
    </dl>


    @if (Model.TaskComments.Any())
    {
        <h4>Comments</h4>
        @for (int i = 0; i < Model.TaskComments.Count; i++)
        {
            var commentsList = Model.TaskComments.ToList();
            var comment = commentsList[i];
            <div>
                <p><strong> Username :</strong> @comment.Username </p>
                <p>@comment.Comment</p>
                <p>
                    @if (User.Identity.Name == comment.Username || User.IsInRole("Admin"))
                    {
                        <a href="@Url.Action("Edit", "TaskComments", new { id = comment.CommentId })">Edit</a>
            <a href="@Url.Action("Delete", "TaskComments", new { id = comment.CommentId })" > Delete </a >
                   }
                </p>
            </div>
            <hr />
        }
    }




    <a asp-action="Create" asp-controller="TaskComments" asp-route-taskid="@Model?.TaskId">Add Comment</a> |
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.TaskId">Edit</a> |
    <a asp-action="Index" asp-route-projectId="@Model.ProjectId">Back to List</a>
</div>
